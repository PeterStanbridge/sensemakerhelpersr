% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_helpers.R
\name{plot_triad}
\alias{plot_triad}
\title{Plot a triad graph using the x and y columns.}
\usage{
plot_triad(
  filtered_data,
  full_data,
  sig_id,
  framework_object,
  dot_size = 0.6,
  dot_colour = "black",
  dot_transparency = 1,
  opaque_filtered = FALSE,
  opaque_filter_dot_size = 0.4,
  opaque_filter_dot_transparency = 0.5,
  opaque_filter_dot_colour = "blue",
  display_anchor_means = FALSE,
  mean_type = "geometric",
  show_percentages = FALSE,
  show_totals = FALSE,
  percentage_type = "Triad",
  zone_font_size = 4,
  zone_display_colour = "black",
  zone_dots = FALSE,
  zone_dot_transparency = 0.25,
  display_stats_caption = TRUE,
  caption_size = 8,
  caption_colour = "black",
  graph_title = NULL,
  title_colour = "black",
  title_size = NULL,
  anchor_size = NULL,
  contours = FALSE,
  contour_fill = FALSE,
  fill_transparency = 0.5,
  fill_legend = FALSE,
  contour_size = 0.5,
  contour_colour = "blue",
  brew_colour_select = "Spectral",
  colour_sig_id = NULL,
  colour_vector = NULL,
  colour_package = "RColorBrewer",
  package_palette = "Set1",
  colour_direction = 1,
  viridis_default_start = 0,
  viridis_default_end = 0.6,
  show_colour_legend = TRUE,
  legend_title_colour = "black",
  legend_title_size = 8,
  legend_text_colour = "black",
  legend_text_size = 8
)
}
\arguments{
\item{filtered_data}{\itemize{
\item Must be supplied. Data frame that includes the triad x and y columns with filtered (if any) signifiers to plot.
}}

\item{full_data}{\itemize{
\item Must be supplied. Data frame that includes the triad x and y columns with all signifiers for the capture.
}}

\item{sig_id}{\itemize{
\item Must be supplied. The triad_id to be plotted.
}}

\item{framework_object}{\itemize{
\item Must be supplied. The framework object from the sensemakerdatar instance object. (this is sensemakerdatar::sm_framework)
}}

\item{dot_size}{\itemize{
\item default 0.6. The graph dot size.
}}

\item{dot_colour}{\itemize{
\item default "black". The colour of the graph dots. A Character string of any valid R colour format, such as hex values or colour names.
}}

\item{dot_transparency}{\itemize{
\item default 1. The transparency (or alpha) value for the dots. A numeric value between 0 and 1.
}}

\item{opaque_filtered}{\itemize{
\item default FALSE. If TRUE, the graph will display filtered out data as well as the current filtered data.
}}

\item{opaque_filter_dot_size}{\itemize{
\item default 0.4. The size of the filtered out data displayed if opaque_filtered set to TRUE.
}}

\item{opaque_filter_dot_transparency}{\itemize{
\item default 0.5. The transparency (or alpha) value for the filtered out data displayed if opaque_filtered set to TRUE. A numeric value between 0 and 1.
}}

\item{opaque_filter_dot_colour}{\itemize{
\item default "blue". The colour of the filtered out data displayed if the opaque_filtered set to TRUE. A character string of any valid R colour format, such as hex values or colour names.
}}

\item{display_anchor_means}{\itemize{
\item default FALSE. If TRUE, will display the anchor means with the anchor titles.
}}

\item{mean_type}{\itemize{
\item default "geometric", otherwise "arithmetic".
}}

\item{show_percentages}{\itemize{
\item default FALSE. If TRUE, the graph will replace dots with zone percentages.
}}

\item{show_totals}{\itemize{
\item default FALSE. If TRUE, the graph will replace dots with zone counts. Both show_percentages and show_totals can be TRUE and then both will show.
}}

\item{percentage_type}{\itemize{
\item default "Triad". If Triad, the percentages are calcuated based on the count within the triad, otherwise "Total", where the percentage is calculated on the total fragment count. Used if show_percentages or show_totals or both set to TRUE.
}}

\item{zone_font_size}{\itemize{
\item default 4. The size of the zone count/percentage text if show_percentages or show_totals or both set to TRUE.
}}

\item{zone_display_colour}{\itemize{
\item default "black". The colour of the zone count/percentage text if show_percentages or show_totals or both set to TRUE. A Character string of any valid R colour format, such as hex values or colour names.
}}

\item{zone_dots}{\itemize{
\item default FALSE. If TRUE, display the triad dots as well as the zone percentages or counts or both. Used if show_percentages or show_totals or both set to TRUE.
}}

\item{zone_dot_transparency}{\itemize{
\item default 0.25 the dot transparency in the zone display if zone_dots set to TRUE.
}}

\item{display_stats_caption}{\itemize{
\item default TRUE. If TRUE, the caption area of the graph will display various counts and percentages relevant to the graph.
}}

\item{caption_size}{\itemize{
\item default 8. The size of the caption text if display_stats_caption set to TRUE.
}}

\item{caption_colour}{\itemize{
\item default "black". The colour of the caption if the display_stats_caption set to TRUE. A Character string of any valid R colour format, such as hex values or colour names.
}}

\item{graph_title}{\itemize{
\item default. NULL. A title for the graph. if NULL the triad title will be used.
}}

\item{title_colour}{\itemize{
\item default "black". The colour of the graph title. A Character string of any valid R colour format, such as hex values or colour names.
}}

\item{title_size}{\itemize{
\item default NULL. The size of the graph title. If NULL calculate anchor size otherwise use the passed in size.
}}

\item{anchor_size}{\itemize{
\item default NULL. If NULL calculate anchor size otherwise use the passed in size.
}}

\item{contours}{\itemize{
\item default FALSE. The size of the graph anchor labels. If TRUE, probability contour lines will display in the graph. Uses a Gaussian Kernel Smoothing Density Estimation method.
}}

\item{contour_fill}{\itemize{
\item default FALSE. If TRUE, a heat map is displayed in the graph.
}}

\item{fill_transparency}{\itemize{
\item default 0.5. The transparency (alpha) value of the contour_fill if countour_fill set to TRUE.
}}

\item{fill_legend}{\itemize{
\item default FALSE. Display the fill legend for the counter fill if contour_fill set to TRUE.
}}

\item{contour_size}{\itemize{
\item default 0.5. The line size of the contour lines if contours set to TRUE.
}}

\item{contour_colour}{\itemize{
\item default "blue". The colour of the contour lines if counters set to TRUE. A Character string of any valid R colour format, such as hex values or colour names.
}}

\item{brew_colour_select}{\itemize{
\item default "Spectral". A character string with any valid RColorBrewer palette name. Use sensemakerhelpersr::get_colour_palette_names() to see all the palette names available
}}

\item{colour_sig_id}{\itemize{
\item default NULL, don't colour by a list signifier, otherwise the signifier id of the list to colour by.
}}

\item{colour_vector}{\itemize{
\item default NULL, a vector of valid R colour codes (alpha, hex etc.) of length the number of list items in the signifier id used for the colour.
}}

\item{colour_package}{\itemize{
\item default "RColorBrewer". Can also use "viridis". If the colour_vector is null then the plot function will assign values from the colour package.
}}

\item{package_palette}{\itemize{
\item default "Set1" for the RColorBrewer Set1 palette. values of "Dark2", "Set1", "Set2" or "Set3" recommended but others can also work. Viridis has "A" - "H".
}}

\item{colour_direction}{\itemize{
\item default 1. 1 for left to right colour selection from the palette, -1 for reverse.
}}

\item{viridis_default_start}{\itemize{
\item default 0, A value between 0-1 for start colour value in the selected viridis palette. Only applicable if "viridis" selected as the colour package.
}}

\item{viridis_default_end}{\itemize{
\item default 0.6. A value between 0-1 for end colour value in the selected viridis palette. Only applicable if "viridis" selected as the colour package.
}}

\item{show_colour_legend}{\itemize{
\item default TRUE, show the colour legend if colour by list (MCQ). FALSE to remove the legend.
}}

\item{legend_title_colour}{\itemize{
\item default "black". The colour legend title. A Character string of any valid R colour format, such as hex values or colour names.
}}

\item{legend_title_size}{\itemize{
\item default 8. The size of the legend title.
}}

\item{legend_text_colour}{\itemize{
\item default "black". The colour legend text A Character string of any valid R colour format, such as hex values or colour names.
}}

\item{legend_text_size}{\itemize{
\item default 8. The size of the legend text.
}}
}
\value{
A ggplot graph object of the triad.
}
\description{
Plot a SenseMaker defined triad with ggplot (note requires the sensemakerframeworkr object)
}
